# File path: .github/workflows/build-openwrt24.1.yml
name: Build-RAX3000M-24.1

on:
  workflow_dispatch:
    inputs:
      include_docker:
        description: '包含Docker支持'
        required: true
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'

jobs:
  build:
    runs-on: ubuntu-22.04
    container:
      image: immortalwrt/imagebuilder:mediatek-mt798x-openwrt-24.10.0
      options: --user root -v ${{ github.workspace }}/bin:/home/build/immortalwrt/bin

    steps:
      - name: 检出源码
        uses: actions/checkout@v3
        with:
          repository: padavanonly/immortalwrt-mt798x-24.10
          ref: 2410
          submodules: recursive
          path: openwrt

      - name: 准备配置文件
        run: |
          # 复制主配置文件
          cp .config openwrt/
          
          # 复制自定义脚本
          cp diy-part1.sh openwrt/
          cp diy-part2.sh openwrt/
          
          # 设置执行权限
          chmod +x openwrt/diy-part*.sh

      - name: 执行自定义步骤
        run: |
          cd openwrt
          ./diy-part1.sh
          ./diy-part2.sh

      - name: 编译固件
        run: |
          cd openwrt
          echo "CONFIG_DOCKER_${{ github.event.inputs.include_docker == 'yes' && 'y' || 'n' }}" >> .config
          make -j$(nproc) V=s

      - name: 生成校验文件
        run: |
          cd openwrt/bin/targets/mediatek/mt798x
          find . -name '*.bin' -exec sha256sum {} \; > checksums.sha256
          mkdir -p ${{ github.workspace }}/artifacts
          cp *.bin ${{ github.workspace }}/artifacts/
          cp checksums.sha256 ${{ github.workspace }}/artifacts/

      - name: 发布固件
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 24.1-$(date +%Y%m%d)
          name: RAX3000M-$(date +%Y%m%d)
          body: |
            ### 构建信息
            设备型号: RAX3000M NAND 版
            源码分支: 2410
            编译时间: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
            Docker支持: ${{ github.event.inputs.include_docker == 'yes' && '是' || '否' }}
            
            ### 使用说明
            后台地址: 192.168.1.1
            用户名: root
            密码: (空)
          files: |
            artifacts/*.bin
            artifacts/checksums.sha256
